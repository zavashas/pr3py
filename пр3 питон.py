import json
import csv
import os
def igrok_choice(prompt, options):
    print(prompt)
    for i, option in enumerate(options):
        print(f"{i + 1}. {option}")
    while True:
        try:
            choice = int(input("–í–∞—à –≤—ã–±–æ—Ä: "))
            if choice < 1 or choice > len(options):
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.")
            else:
                return choice
        except ValueError:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

def input_choice(choice, person):
    if choice == 1:
        print("\"–ü–æ–≥–æ–¥–∞ - —Å—É–ø–µ—Ä, –≠–∫–∑–∞–º–µ–Ω—ã —Å–¥–∞–Ω—ã..\"")
    elif choice == 2:
        print("\"–ù–µ—Ç, —è –≤—Å–µ-—Ç–∞–∫–∏ —Å–∏–º–ø–∞—Ç–∏—á–Ω–∞—è. –ü—É—Å—Ç—å –∏ –Ω–µ–º–Ω–æ–≥–æ —É—Å—Ç–∞–≤—à–∞—è.\"")

def gg(person):
    print(person)

def delete_save():
    if os.path.exists("person.json"):
        os.remove("person.json")
    else:
        print("–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def save_to_csv(person):
    csv_columns = ['–ò–º—è', '–°—Ç–æ–π–∫–æ—Å—Ç—å', '–î–∏–ø–ª–æ–º–∞—Ç–∏—è']
    csv_file = "person.csv"
    try:
        with open(csv_file, 'a', newline='') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=csv_columns, delimiter=';')

            if csvfile.tell() == 0:
                writer.writeheader()
            writer.writerow(person)
    except IOError:
            print("I/O error")
def game():
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É-–Ω–æ–≤–µ–ª–ª—É!")

    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≥–ª–∞–≤–Ω–æ–π –≥–µ—Ä–æ–∏–Ω–∏: ")

    person = {
        "–ò–º—è": name,
        "–°—Ç–æ–π–∫–æ—Å—Ç—å": 0,
        "–î–∏–ø–ª–æ–º–∞—Ç–∏—è": 0
    }
    name = person['–ò–º—è']


    with open('person.json','w') as file:
        json.dump(person, file, indent=4)
    with open('person.json','r') as file:
        person = json.load(file)
    print(person)

    print(
        "–í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä. –í—ã–±–∏—Ä–∞–π—Ç–µ —Å —É–º–æ–º, –≤–µ–¥—å –∫–∞–∂–¥—ã–π –≤—ã–±–æ—Ä –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é, –≤ —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏.")

    print(f"\n{name}: \"–í–æ—Ç –∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —É—á–µ–±–Ω—ã–π –≥–æ–¥\"\n")

    choice = igrok_choice("\"–°–≤–æ–±–æ–¥–∞! –ö–∞–Ω–∏–∫—É–ª—ã!\"",
                         ['–í—ã–≥–ª—è–Ω—É—Ç—å –≤ –æ–∫–Ω–æ', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∑–µ—Ä–∫–∞–ª–æ'])
    input_choice(choice, person)

    print(f"\n{name}: \"–ü–æ–≤–µ—Ä–∏—Ç—å –Ω–µ –º–æ–≥—É, —á—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞–Ω–æ –≤—Å—Ç–∞–≤–∞—Ç—å. –í—ã—Å–ø–ª—é—Å—å, –Ω–∞–∫–æ–Ω–µ—Ü..\"\n")

    print("–ù–∞—Å—Ç—è: \"–ö—Ç–æ –∫–∞–∫. –≠—Ç–æ —Ç—ã –≤—Å–µ —Å–¥–∞–ª–∞. –ê —É –º–µ–Ω—è –µ—â–µ —Ö–≤–æ—Å—Ç—ã.\"\n")

    print(f"{name}: \"–ë–µ–¥–∞. –ù–æ –¥–∏–ø–ª–æ–º –ú–ü–¢ –∑–∞ –∫—Ä–∞—Å–∏–≤—ã–µ –≥–ª–∞–∑–∞ –Ω–µ –¥–∞—é—Ç.\"\n")

    print("–ù–∞—Å—Ç—è: \"–ê –∂–∞–ª—å. –ö—Å—Ç–∞—Ç–∏, –º—ã –∏–¥–µ–º —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É –≤ —á–µ—Å—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫—É—Ä—Å–∞?\"\n")

    choice = igrok_choice(f"\n{name}: \"–ù—É..\"",
                         ['–ö–æ–Ω–µ—á–Ω–æ –∂–µ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', '–£—Å–æ–º–Ω–∏—Ç—å—Å—è, –±—É–¥–µ—Ç –ª–∏ —Ç–∞–º –≤–µ—Å–µ–ª–æ'])
    if choice == 1:
        print(f"{name}: \"–ü–æ—á–µ–º—É –±—ã –∏ –Ω–µ –ø–æ–π—Ç–∏? –ü–æ–ø—Ä–æ—â–∞—Ç—å—Å—è —Å –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∞–º–∏ –Ω–∞–¥–æ. –ü—Ä–∞–≤–¥–∞ –≤–µ–¥—å?\"\n")
        print("–ù–∞—Å—Ç—è: \"–î–∞. –ú–Ω–æ–≥–∏–µ —É–µ–¥—É—Ç –∏–∑ –æ–±—â–∞–≥–∏.\"\n")
    else:
        print(f"{name}: \"–î–∞–∂–µ –Ω–µ –∑–Ω–∞—é.. –í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –±—ã–ª–æ —Å–∫—É—á–Ω–æ. –í—Ä—è–¥ –ª–∏ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –∏–Ω–∞—á–µ\"\n")
        print("–ù–∞—Å—Ç—è: \"–≠–π! –¢—ã —á—Ç–æ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—è –æ–¥–Ω—É?\"\n")

    print("–¢—É–∫-—Ç—É–∫\n")

    print("–ù–∞—Å—Ç—è: \"–Ø –æ—Ç–∫—Ä–æ—é.\"\n")

    print("–≠–¥–∏–∫: \"–ü—Ä–∏–≤–µ—Ç, –¥–µ–≤–æ—á–∫–∏! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?\"\n")

    print("–ù–∞—Å—Ç—è: \"–≠–¥–∏–∫? –°–≤–∞–ª–∏ –∏–∑ –∂–µ–Ω—Å–∫–æ–≥–æ –∫—Ä—ã–ª–∞.\"\n")

    print(f"–≠–¥–∏–∫: \"–í–æ–æ–±—â–µ-—Ç–æ —è –ø–æ –¥–µ–ª—É, {name}, —Ç–µ–±–µ –ø–æ—Å—ã–ª–∫–∞.\"\n")

    print(f"{name}: \"–û—Ç –∫–æ–≥–æ?\"\n")

    print("–≠–¥–∏–∫: \"–ë–µ–∑ –ø–æ–Ω—è—Ç–∏—è.\"\n")

    print(f"{name} –≤–∑—è–ª–∞ –ø–æ—Å—ã–ª–∫—É –∏ –æ—Ç–æ—à–ª–∞ –∫ –æ–∫–Ω—É.\n")

    choice = igrok_choice(f"{name}: \"–°—Ç—Ä–∞–Ω–Ω–æ..\"",
                         ['–ü–æ—Ç—Ä—è—Å—Ç–∏ –ø–æ—Å—ã–ª–∫—É', '–ü—Ä–æ—â—É–ø–∞—Ç—å –ø–æ—Å—ã–ª–∫—É'])
    if choice == 1:
        print("...\n–û—á–µ–Ω—å –ª–µ–≥–∫–∞—è, –Ω–æ –≤–Ω—É—Ç—Ä–∏ —Ç–æ—á–Ω–æ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å)\n")
    else:
        print("...\n–ü–æ—Ö–æ–∂–µ, –ø–æ–ª—É–ø—É—Å—Ç–∞—è –∫–∞—Ä—Ç–æ–Ω–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞.\n")

    print(f"{name}: \"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫—Ç–æ –ø—Ä–∏—Å–ª–∞–ª?\"\n")

    print(
        "...\n–ù–µ–±–æ–ª—å—à–∞—è –∫–æ—Ä–æ–±–∫–∞ –±—ã–ª–∞ –∑–∞–≤–µ—Ä–Ω—É—Ç–∞ –≤ –æ–±—ã—á–Ω—É—é –ø–æ—á—Ç–æ–≤—É—é –±—É–º–∞–≥—É. –ù–æ –Ω–∏ —à—Ç–µ–º–ø–µ–ª–µ–π, –Ω–∏ –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –Ω–µ –±—ã–ª–æ.\n")

    print(f"{name} —Ä–∞–∑–æ—Ä–≤–∞–ª–∞ –±—É–º–∞–≥—É –∏ –æ—Ç–∫—Ä—ã–ª–∞ –∫–æ—Ä–æ–±–∫—É.\n")

    print("–í–Ω—É—Ç—Ä–∏ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∞ –∏ –º–∞—Å–∫–∞.\n")

    print(
        f"{name}: \"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –º–∞—Å–∫–∞—Ä–∞–¥.. –≤–∞–º–ø–∏—Ä–æ–≤?! –ß—Ç–æ –∑–∞ —á—É—à—å? –§–æ—Ä–º–∞ –æ–¥–µ–∂–¥—ã –ª—é–±–∞—è. –í—Ö–æ–¥ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –º–∞—Å–∫–∏.. –ò –∞–¥—Ä–µ—Å.\"\n")

    print(f"–ù–∞—Å—Ç—è: \"{name}, —á—Ç–æ —Ç–∞–º? –û—Ç –∫–æ–≥–æ?\"\n")

    print(f"{name}: \"–ü–æ—Å–º–æ—Ç—Ä–∏ —Å–∞–º–∞\"\n")

    print("–ù–∞—Å—Ç—è: \"–ó–∞–±–∞–≤–Ω–æ.. –ù–æ —ç—Ç–æ –∂–µ —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º!\"\n")

    choice = igrok_choice(
         f"{name}:\"–î–∞, –¥—É–º–∞—é —Å—ä–µ–∑–¥–∏—Ç—å —Ç—É–¥–∞.\"\n  –≠–¥–∏–∫: \"–°—Ç–æ–ø, —Å—Ç–æ–ø! {name}, —Ç—ã —Ä–µ—à–∏–ª–∞ —Å–ª–∏—Ç—å—Å—è? –û—Å—Ç–∞–≤–∞–π—Å—è —Å –Ω–∞–º–∏. –¢–µ–±–µ –º–Ω–æ–≥–∏–µ –±—É–¥—É—Ç —Ä–∞–¥—ã.\"\n ...\n –ü–∞—Ä–µ–Ω—å –æ–±–Ω—è–ª {name} –∑–∞ –ø–ª–µ—á–∏,\n –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è –º–µ–Ω—è—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä {name}, \n –û–¥–Ω–∏ –ø–æ–≤—ã—à–∞—é—Ç –µ—ë  üëä–°—Ç–æ–π–∫–æ—Å—Ç—å - —Å–∏–ª—É –¥—É—Ö–∞, —Ç–≤—ë—Ä–¥–æ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞. \n –î—Ä—É–≥–∏–µ üìö –î–∏–ø–ª–æ–º–∞—Ç–∏—é -—É–º–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è, –æ–±–∞—è–Ω–∏–µ –∏ —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å. \n –í—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.",
        ['–†–µ–∑–∫–æ —Å–±—Ä–æ—Å–∏—Ç—å —Ä—É–∫—É –Ω–∞—Ö–∞–ª–∞', '–û—Ç–æ–π—Ç–∏, –Ω–µ –ø—Ä–æ–≤–æ—Ü–∏—Ä—É—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç'])

    if choice == 1:
        print(f"–ü–æ—à–µ–ª –≤–æ–Ω. –ß—Ç–æ –∑–∞ —Ö–∞–º—Å—Ç–≤–æ? –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ä—É–∫—É –æ—Ç–≥—Ä—ã–∑—É. (+1 –°—Ç–æ–π–∫–æ—Å—Ç—å)\n")


        with open('person.json', 'r') as file:
            person = json.load(file)
        person["–°—Ç–æ–π–∫–æ—Å—Ç—å"] = 1
        with open('person.json', 'w') as file:
            json.dump(person, file, indent=4)

    else:
        print(f"–ù–µ –ø—Ä–∏—Å—Ç–∞–≤–∞–π. –≠—Ç–æ –ª–∏—à–Ω–µ–µ. –¢–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ—Ä—É–≥–∞—Ç—å—Å—è (+1 –î–∏–ø–ª–æ–º–∞—Ç–∏—è)\n")


        with open('person.json', 'r') as file:
            person = json.load(file)
        person["–î–∏–ø–ª–æ–º–∞—Ç–∏—è"] = 1
        with open('person.json', 'w') as file:
            json.dump(person, file, indent=4)

    print("–≠–¥–∏–∫ —É—Ö–æ–¥–∏—Ç –∏–∑ –∫–æ–º–Ω–∞—Ç—ã\n")

    print("–ù–∞—Å—Ç—è: \"–¢—ã —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ö–æ—á–µ—à—å —Ç—É–¥–∞ –ø–æ–µ—Ö–∞—Ç—å? –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç –∫–æ–≥–æ.\"\n")

    choice = igrok_choice(
        f"{name}: \"–•–º–º..\"",
        ['–¢—ã –ø—Ä–∞–≤–∞, –ª—É—á—à–µ –ø—Ä–æ–≤–µ–¥—É –≤—Ä–µ–º—è —Å –≤–∞–º–∏.', '–î–∞, —è —Ä–µ—à–∏–ª–∞, —á—Ç–æ –ø–æ–µ–¥—É.'])

    if choice == 1:
        print(f"\n–í–µ—á–µ—Ä–æ–º {name} –ø–æ—à–ª–∞ –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É —Å–æ —Å–≤–æ–∏–º–∏ –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–∞–º–∏ –∏ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ–ª–∞ –≤—Ä–µ–º—è.")
    else:
        print(
            f"\n–í–µ—á–µ—Ä–æ–º {name} –≤—ã–∑–≤–∞–ª–∞ —Ç–∞–∫—Å–∏ –∏ –ø–æ–µ—Ö–∞–ª–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –ø–∏—Å—å–º–µ –∞–¥—Ä–µ—Å—É. –ü–æ –ø—Ä–∏–µ–∑–¥–µ –µ—ë –≤—Å—Ç—Ä–µ—Ç–∏–ª –≤—ã—Å–æ–∫–∏–π –º—É–∂—á–∏–Ω–∞ –≤ —á–µ—Ä–Ω–æ–π –º–∞—Å–∫–µ –∏ —É–¥–∞—Ä–∏–ª –ø–æ –≥–æ–ª–æ–≤–µ. {name} –æ—Ç–∫–ª—é—á–∏–ª–∞—Å—å.")

    with open('person.json', 'r') as file:
        person = json.load(file)
    print(person)

    with open('person.json', 'r') as file:
        person = json.load(file)
    save_to_csv(person)
    delete_save()

game()

